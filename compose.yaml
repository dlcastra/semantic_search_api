version: '3.9'

services:
  server:
    container_name: server
    build:
      context: .
    working_dir: /app
    command: uvicorn application:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - qdrant
      - db
      - redis
    restart: on-failure
    networks:
      - app_network

  db:
    container_name: postgresql_db
    image: postgres:16-alpine
    restart: always
    user: postgres
    env_file:
      - .env
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=docker_embedding_db
      - POSTGRES_LOGGING_COLLECTOR=on
      - POSTGRES_LOG_CONNECTIONS=on
    ports:
      - "5433:5432"
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      - app_network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin@admin.com
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - app_network

  migrator:
    container_name: migrator
    build:
      context: .
    depends_on:
      db:
        condition: service_healthy
    command: alembic upgrade head
    volumes:
      - .:/app
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=docker_embedding_db
      - DOCKER_ENV=true
    networks:
      - app_network

  qdrant:
    container_name: qdrant_db
    image: qdrant/qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_storage:/qdrant/storage
    networks:
      - app_network

  redis:
    container_name: redis
    image: redis:7.0-alpine
    restart: always
    expose:
      - "6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

volumes:
  qdrant_storage:
  postgres_data:

networks:
  app_network:
    driver: bridge
